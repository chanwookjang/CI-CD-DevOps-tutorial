apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yaml
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: web
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yaml
        kompose.version: 1.36.0 (ae2a39403)
      labels:
        io.kompose.service: web
    spec:
      containers:
        - args:
            - /bin/sh
            - -c
            - "python manage.py makemigrations \npython manage.py migrate\npython manage.py collectstatic --noinput\ngunicorn --bind 0.0.0.0:8585 prodxcloud_multi_tenant_django.wsgi:application --workers 4 --threads 4\n"
          env:
            - name: DJANGO_LOG_LEVEL
              value: DEBUG
            - name: DJANGO_SETTINGS_MODULE
              value: prodxcloud_multi_tenant_django.settings
            - name: ENV
              value: local
          envFrom:
            - configMapRef:
                name: env
          image: andy1692/django_project:web
          resources:
            requests:
              cpu: "250m"      # 최소 0.25코어
              memory: "256Mi"  # 최소 256MiB 메모리
            limits:
              cpu: "500m"      # 최대 0.5코어
              memory: "512Mi"  # 최대 512MiB 메모리
          livenessProbe:
            exec:
              command:
                - curl
                - --fail
                - --write-out
                - |
                  HTTP CODE : %{http_code}
                - --output
                - /dev/null
                - http://127.0.0.1:8585/
            failureThreshold: 10
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 30
          name: django-web-dev
          ports:
            - containerPort: 8585
              protocol: TCP
          volumeMounts:
            - mountPath: /djangoapp
              name: appdata
            - mountPath: /djangoapp/staticfiles
              name: staticfiles
      restartPolicy: Always
      volumes:
        - name: appdata
          persistentVolumeClaim:
            claimName: appdata
        - name: staticfiles
          persistentVolumeClaim:
            claimName: staticfiles
